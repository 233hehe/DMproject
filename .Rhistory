appearance = list(rhs=c('PROFITABLE.1=1'),default='lhs'),
control = list(verbose=F))
rules2<-sort(rules,by="confidence",decreasing = TRUE)
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
inspect(rules2[1:5])
summary(rules2)
plot(rules[1:5], method="graph")
subset.matrix <- is.subset(rules, rules)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules[!redundant]
rules<-rules.pruned
inspect(rules[1:5])
rules<-apriori(asloan[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules<-sort(rules,by="confidence",decreasing = TRUE)
rules2<-apriori(asloan1,parameter = list(supp=0.1,conf=0.8,maxlen=3),
appearance = list(rhs=c('PROFITABLE.1=1'),default='lhs'),
control = list(verbose=F))
rules2<-sort(rules,by="confidence",decreasing = TRUE)
inspect(rules.pruned[1:5])
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph",interactive=TRUE,shading=NA)
#
inspect(rules2[1:5])
summary(rules2)
plot(rules[1:5], method="graph")
plot(rules[1:5], method="graph",interactive=TRUE,shading=NA)
plot(rules[1:5], method="graph",interactive=TRUE,shading=NA)
plot(rules[1:5], method="graph",shading=NA)
asloan2<-loan
asloan2<-loan
asloan2$AGE=NULL
asloan2$AMOUNT_REQUESTED=NULL
asloan2$NPV=NULL
asloan2<-data.frame(lapply(asloan2,factor))
rules2<-apriori(asloan2,parameter = list(supp=0.1,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules2<-sort(rules,by="confidence",decreasing = TRUE)
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
#
inspect(rules2[1:5])
summary(rules2)
plot(rules[1:5], method="graph")
rules2<-sort(rules,by=c("confidence","lift"),decreasing = TRUE)
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
#
inspect(rules2[1:5])
summary(rules2)
plot(rules[1:5], method="graph")
rules<-apriori(asloan[,-8],parameter = list(supp=0.001,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
sum(subset(loan$NPV,loan$SAV_ACCT==3))
sum(npv)
rules<-apriori(asloan[,-8],parameter = list(supp=0.03,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
rules<-apriori(asloan[,-8],parameter = list(supp=0.001,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules<-sort(rules,by="confidence",decreasing = TRUE)
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$JOB==0))
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(ggplot2)
library(cluster)
library(fpc)
library(arules)
library(arulesViz)
#
loan<-read.csv("../HW6/data.csv",stringsAsFactors=FALSE)
loan$OBS.<-NULL
loan$CREDIT_EXTENDED<-NULL
loan$AMOUNT_REQUESTED<-gsub(pattern = ",",replacement = "",x = loan$AMOUNT_REQUESTED)
loan$NPV<-gsub(pattern = ",",replacement = "",x = loan$NPV)
loan$NPV<-as.numeric(loan$NPV)
loan$AMOUNT_REQUESTED<-as.numeric(loan$AMOUNT_REQUESTED)
#
loan$CHK_ACCT<-as.factor(loan$CHK_ACCT)
loan$SAV_ACCT<-as.factor(loan$SAV_ACCT)
loan$HISTORY<-as.factor(loan$HISTORY)
loan$JOB<-as.factor(loan$JOB)
loan$TYPE<-as.factor(loan$TYPE)
set.seed(12345)
#
kmloan<-loan
#
loan$PROFITABLE<-as.factor(ifelse(loan$NPV>0,1,0))
dummies<-dummyVars(NPV~.,data=kmloan)
kmloan<-data.frame(predict(dummies,newdata = kmloan))
kmloan=data.frame(scale(kmloan))
km.out5<-kmeans(kmloan,5,nstart = 20)
km.out5
wss <- (nrow(kmloan))*sum(apply(kmloan,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(kmloan,centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
#
km.out5$totss
kmloan$PROFITABLE<-loan$PROFITABLE
table(km.out5$cluster)
dist(km.out5$centers)
table(kmloan$PROFITABLE,km.out5$cluster)
cat("from the model it is difficult to see the clear label. There is profit and loss group in each cluster. and the center point is diffcult to interpert as in the scale dimension")
kmloan$NPV<-loan$NPV
kmloan$CLUSTER<-km.out5$cluster
#a.	Create a bar chart showing the percentage of people in each cluster.
qplot(kmloan$CLUSTER)+geom_bar(binwidth =0.3)
#b.	Create a table showing average of NPV split up by Cluster Id.
aggregate(kmloan$NPV, by=list(cluster=km.out5$cluster), mean)
#c.	Attach these as Exhibit 2.
km.out4<-kmeans(kmloan[,-41:-43],4,nstart = 20)
km.out4
aggregate(kmloan$NPV, by=list(cluster=km.out4$cluster), mean)
#
km.out6<-kmeans(kmloan[,-41:-43],6,nstart = 20)
km.out6
aggregate(kmloan$NPV, by=list(cluster=km.out6$cluster), mean)
asloan<-loan
asloan$HISTORY<-as.factor(asloan$HISTORY)
asloan$EMPLOYMENT<-as.factor(asloan$EMPLOYMENT)
asloan$OWN_RES<-as.factor(asloan$OWN_RES)
asloan$TYPE=NULL
asloan<-asloan[,sapply(asloan,is.factor)]
asloan$NPV<-loan$NPV
#
dummies<-dummyVars(NPV~.,data=asloan)
asloan1<-data.frame(predict(dummies,newdata = asloan))
asloan1<-data.frame(lapply(asloan1,factor))
#
asloan2<-loan
asloan2$AGE=NULL
asloan2$AMOUNT_REQUESTED=NULL
asloan2$NPV=NULL
asloan2<-data.frame(lapply(asloan2,factor))
rules<-apriori(asloan[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules<-sort(rules,by="confidence",decreasing = TRUE)
rules2<-apriori(asloan2,parameter = list(supp=0.1,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules2<-sort(rules,by=c("confidence","lift"),decreasing = TRUE)
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
#
inspect(rules2[1:5])
summary(rules2)
plot(rules[1:5], method="graph")
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1}")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
sum(npv)
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$JOB==0))
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1}"\n)
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1} \n")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1} \n")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
sum(npv)
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$JOB==0))
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1} \n")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
sum(npv)
cat("{SAV_ACCT=3,HISTORY=4,OWN_RES=1}     => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$HISTORY==4$OWN_RES==1))
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1} \n")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
sum(npv)
cat("{SAV_ACCT=3,HISTORY=4,OWN_RES=1}     => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$HISTORY==4$loan$OWN_RES==1))
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1} \n")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
sum(npv)
cat("{SAV_ACCT=3,HISTORY=4,OWN_RES=1}     => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$HISTORY==4&loan$OWN_RES==1))
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1} \n")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
sum(npv)
cat("{SAV_ACCT=3,HISTORY=4,OWN_RES=1}     => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$HISTORY==4&loan$OWN_RES==1))
cat("{CHK_ACCT=2,EMPLOYMENT=4,JOB=2}      => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$CHK_ACCT==2&loan$EMPLOYMENT==4&loan$JOB==2))
cat("{CHK_ACCT=3,SAV_ACCT=4,EMPLOYMENT=3} => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==4&loan$EMPLOYMENT==3))
cat("{CHK_ACCT=3,EMPLOYMENT=3,JOB=1}      => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$CHK_ACCT==3&loan$EMPLOYMENT==3&loan$JOB==1))
cloan<-loan
cloan<-cloan[,c(2,3,8)]
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
km.out<-kmeans(cloan1,5,nstart=20)
km.out$cluster
km.out
table(km.out$cluster,loan$PROFITABLE)
qplot(prop.table(kmloan$CLUSTER))+geom_bar(binwidth =0.3)
qplot(prop.table(kmloan$CLUSTER))+geom_bar()
barplot(prop.table(kmloan$CLUSTER))
prop.table(km.out5$cluster)
ggplot(kmloan, aes(x = factor(CLUSTER))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels = percent)
ggplot(kmloan, aes(x = factor(CLUSTER))) +
geom_bar(aes(y = (..count..)/sum(..count..)))
kmloan$NPV<-loan$NPV
kmloan$CLUSTER<-km.out5$cluster
#a.	Create a bar chart showing the percentage of people in each cluster.
ggplot(kmloan, aes(x = factor(CLUSTER))) +
geom_bar(aes(y = (..count..)/sum(..count..)))
#b.	Create a table showing average of NPV split up by Cluster Id.
aggregate(kmloan$NPV, by=list(cluster=km.out5$cluster), mean)
#c.	Attach these as Exhibit 2.
aggregate(loan$NPV, by=list(cluster=km.out5$cluster), mean)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
plotcluster(cloan,km.out)
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
cloan1$EMPLOYMENT<-as.factor(cloan1$EMPLOYMENT)
km.out<-kmeans(cloan1,5,nstart=20)
km.out
table(km.out$cluster,loan$PROFITABLE)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
plotcluster(cloan1,km.out)
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
cloan1$EMPLOYMENT<-as.factor(cloan1$EMPLOYMENT)
km.out<-kmeans(cloan1,5,nstart=20)
table(km.out$cluster,loan$PROFITABLE)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
plotcluster(cloan1,km.out)
plotcluster(cloan1,km.out$cluster)
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
km.out<-kmeans(cloan1,5,nstart=20)
table(km.out$cluster,loan$PROFITABLE)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
plotcluster(cloan1,km.out$cluster)
plot(cloan1,col=km.out$cluster)
cloan1<-cloan[,c(2,3,8)]
library(scatterplot3d)
scatterplot3d(cloan1$CHK_ACCT,cloan1$SAV_ACCT,cloan1$EMPLOYMENT, main="3D Scatterplot")
scatterplot3d(cloan1$CHK_ACCT,cloan1$SAV_ACCT,cloan1$EMPLOYMENT, main="3D Scatterplot", type=km.out$cluster)
scatterplot3d(cloan1$CHK_ACCT,cloan1$SAV_ACCT,cloan1$EMPLOYMENT, main="3D Scatterplot", col=km.out$cluster)
scatterplot3d(cloan1$CHK_ACCT,cloan1$SAV_ACCT,cloan1$EMPLOYMENT, main="3D Scatterplot", color=km.out$cluster)
scatterplot3d(cloan1$CHK_ACCT,cloan1$SAV_ACCT,cloan1$EMPLOYMENT, main="3D Scatterplot", type=1,color=km.out$cluster)
scatterplot3d(cloan1$CHK_ACCT,cloan1$SAV_ACCT,cloan1$EMPLOYMENT, main="3D Scatterplot", pch=km.out$cluster,color=km.out$cluster)
plotcluster(cloan1,km.out$cluster)
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
km.out<-kmeans(cloan1,5,nstart=20)
table(km.out$cluster,loan$PROFITABLE)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
km.out
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(ggplot2)
library(cluster)
library(fpc)
library(arules)
library(arulesViz)
#
loan<-read.csv("../HW6/data.csv",stringsAsFactors=FALSE)
loan$OBS.<-NULL
loan$CREDIT_EXTENDED<-NULL
loan$AMOUNT_REQUESTED<-gsub(pattern = ",",replacement = "",x = loan$AMOUNT_REQUESTED)
loan$NPV<-gsub(pattern = ",",replacement = "",x = loan$NPV)
loan$NPV<-as.numeric(loan$NPV)
loan$AMOUNT_REQUESTED<-as.numeric(loan$AMOUNT_REQUESTED)
#
loan$CHK_ACCT<-as.factor(loan$CHK_ACCT)
loan$SAV_ACCT<-as.factor(loan$SAV_ACCT)
loan$HISTORY<-as.factor(loan$HISTORY)
loan$JOB<-as.factor(loan$JOB)
loan$TYPE<-as.factor(loan$TYPE)
set.seed(12345)
#
kmloan<-loan
#
loan$PROFITABLE<-as.factor(ifelse(loan$NPV>0,1,0))
dummies<-dummyVars(NPV~.,data=kmloan)
kmloan<-data.frame(predict(dummies,newdata = kmloan))
kmloan=data.frame(scale(kmloan))
km.out5<-kmeans(kmloan,5,nstart = 20)
km.out5
wss <- (nrow(kmloan))*sum(apply(kmloan,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(kmloan,centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
#
km.out5$totss
kmloan$PROFITABLE<-loan$PROFITABLE
table(km.out5$cluster)
dist(km.out5$centers)
table(kmloan$PROFITABLE,km.out5$cluster)
cat("from the model it is difficult to see the clear label. There is profit and loss group in each cluster. and the center point is diffcult to interpert as in the scale dimension")
kmloan$NPV<-loan$NPV
kmloan$CLUSTER<-km.out5$cluster
#a.	Create a bar chart showing the percentage of people in each cluster.
ggplot(kmloan, aes(x = factor(CLUSTER))) +
geom_bar(aes(y = (..count..)/sum(..count..)))
#b.	Create a table showing average of NPV split up by Cluster Id.
aggregate(kmloan$NPV, by=list(cluster=km.out5$cluster), mean)
#c.	Attach these as Exhibit 2.
km.out4<-kmeans(kmloan[,-41:-43],4,nstart = 20)
km.out4
aggregate(kmloan$NPV, by=list(cluster=km.out4$cluster), mean)
#
km.out6<-kmeans(kmloan[,-41:-43],6,nstart = 20)
km.out6
aggregate(kmloan$NPV, by=list(cluster=km.out6$cluster), mean)
asloan<-loan
asloan$HISTORY<-as.factor(asloan$HISTORY)
asloan$EMPLOYMENT<-as.factor(asloan$EMPLOYMENT)
asloan$OWN_RES<-as.factor(asloan$OWN_RES)
asloan$TYPE=NULL
asloan<-asloan[,sapply(asloan,is.factor)]
asloan$NPV<-loan$NPV
#
dummies<-dummyVars(NPV~.,data=asloan)
asloan1<-data.frame(predict(dummies,newdata = asloan))
asloan1<-data.frame(lapply(asloan1,factor))
#
asloan2<-loan
asloan2$AGE=NULL
asloan2$AMOUNT_REQUESTED=NULL
asloan2$NPV=NULL
asloan2<-data.frame(lapply(asloan2,factor))
rules<-apriori(asloan[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules<-sort(rules,by="confidence",decreasing = TRUE)
rules2<-apriori(asloan2,parameter = list(supp=0.1,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules2<-sort(rules,by=c("confidence","lift"),decreasing = TRUE)
inspect(rules[1:5])
summary(rules)
plot(rules[1:5], method="graph")
#
inspect(rules2[1:5])
summary(rules2)
plot(rules[1:5], method="graph")
cat("{CHK_ACCT=3,SAV_ACCT=3,HISTORY=4}    => {PROFITABLE=1} \n")
npv<-subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==3&loan$HISTORY==4)
sum(npv)
cat("{SAV_ACCT=3,HISTORY=4,OWN_RES=1}     => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$SAV_ACCT==3&loan$HISTORY==4&loan$OWN_RES==1))
cat("{CHK_ACCT=2,EMPLOYMENT=4,JOB=2}      => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$CHK_ACCT==2&loan$EMPLOYMENT==4&loan$JOB==2))
cat("{CHK_ACCT=3,SAV_ACCT=4,EMPLOYMENT=3} => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$CHK_ACCT==3&loan$SAV_ACCT==4&loan$EMPLOYMENT==3))
cat("{CHK_ACCT=3,EMPLOYMENT=3,JOB=1}      => {PROFITABLE=1} \n")
sum(subset(loan$NPV,loan$CHK_ACCT==3&loan$EMPLOYMENT==3&loan$JOB==1))
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
km.out<-kmeans(cloan1,5,nstart=20)
table(km.out$cluster,loan$PROFITABLE)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
km.out
cloan2<-asloan
cloan2$CLUSTER<-kmloan$CLUSTER
rules<-apriori(claon2[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
cloan2<-asloan
cloan2$CLUSTER<-kmloan$CLUSTER
rules<-apriori(claon2[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules<-apriori(cloan2[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
cloan2$CLUSTER<-as.factor(kmloan$CLUSTER)
rules<-apriori(cloan2[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules<-sort(rules,by="confidence",decreasing = TRUE)
#based on best association rule to reduce dimension of the kmeans.
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
km.out<-kmeans(cloan1,5,nstart=20)
table(km.out$cluster,loan$PROFITABLE)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
km.out
#based on the cluster k=5 kmeans to create association rule.
cloan2<-asloan
cloan2$CLUSTER<-as.factor(kmloan$CLUSTER)
rules3<-apriori(cloan2[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules3<-sort(rules,by="confidence",decreasing = TRUE)
inspect(rules3)
#based on best association rule to reduce dimension of the kmeans.
cloan<-loan
cloan1<-cloan[,c(2,3,8)]
km.out<-kmeans(cloan1,5,nstart=20)
table(km.out$cluster,loan$PROFITABLE)
aggregate(loan$NPV, by=list(cluster=km.out$cluster), mean)
km.out
#based on the cluster k=5 kmeans to create association rule.
cloan2<-asloan
cloan2$CLUSTER<-as.factor(kmloan$CLUSTER)
rules3<-apriori(cloan2[,-8],parameter = list(supp=0.01,conf=0.8),
appearance = list(rhs=c('PROFITABLE=1'),default='lhs'),
control = list(verbose=F))
rules3<-sort(rules,by="confidence",decreasing = TRUE)
inspect(rules3[1:5])
setwd("../GitHub/DMproject/")
library(stringr)
library(dplyr)
library(ggplot2)
#function
sumna<-function(x){
sum(is.na(x))
}
#read data and clear out useless column
company <- read.csv("crunchbase.csv",stringsAsFactors = FALSE,na.strings = c(""," ","NA","Nan"))
c1<-company
c1$X<-NULL
c1$Company.Name.URL<-NULL
c1$Stock.Symbol.URL<-NULL
c1$Crunchbase.Rank<-NULL
c1$Trend.Score..30.Days.<-NULL
c1$Trend.Score..7.Days.<-NULL
c1$Trend.Score..90.Days.<-NULL
#convert to correct data type
c2<-c1
c2$Description<-NULL
c2$Status<-as.factor(c2$Status)
c2$Closed.Date<-as.Date(c2$Closed.Date,format = "%m/%d/%Y")
c2$Founded.Date<-as.Date(c2$Founded.Date,format = "%m/%d/%Y")
c2$Number.of.Articles<-as.numeric(gsub(x=c2$Number.of.Articles,replacement = "",pattern = ","))
c2$Number.of.Employees<-as.factor(c2$Number.of.Employees)
c2$Number.of.Founders[is.na(c2$Number.of.Founders)]<-0
c2$Number.of.Funding.Rounds[is.na(c2$Number.of.Funding.Roundsis.na)]<-0
#
c2$Last.Funding.Date<-as.Date(c2$Last.Funding.Date,format="%m/%d/%Y")
c2$Last.Funding.Amount<-as.numeric(gsub(x=c2$Last.Funding.Amount,replacement = "",pattern = "(\\$|,)"))
c2$Last.Funding.Amount[is.na(c2$Last.Funding.Amount)]<-0
c2$Last.Funding.Type<-as.factor(c2$Last.Funding.Type)
c2$Last.Equity.Funding.Amount<-as.numeric(gsub(x=c2$Last.Equity.Funding.Amount,replacement = "",pattern = "(\\$|,)"))
c2$Last.Equity.Funding.Amount[is.na(c2$Last.Equity.Funding.Amount)]<-0
#
c2$Total.Equity.Funding.Amount<-as.numeric(gsub(x=c2$Total.Equity.Funding.Amount,replacement = "",pattern = "(\\$|,)"))
c2$Total.Equity.Funding.Amount[is.na(c2$Total.Equity.Funding.Amount)]<-0
c2$Total.Funding.Amount<-as.numeric(gsub(x=c2$Total.Funding.Amount,replacement = "",pattern = "(\\$|,)"))
c2$Total.Funding.Amount[is.na(c2$Total.Funding.Amount)]<-0
#
c2$IPO.Date<-as.Date(c2$IPO.Date,format="%m/%d/%Y")
c3<-c2
#Create More Useful Column
apply(c3,2,sumna)
c3$Company.Length<-ifelse(is.na(c3$Closed.Date),Sys.Date()-c3$Founded.Date, c3$Closed.Date-c3$Founded.Date)/365
#
unique(as.vector(str_split(c3$Categories,",",simplify = TRUE)))
category<-data.frame(str_split(c3$Categories,",",simplify = TRUE),stringsAsFactors = FALSE)
unique(as.vector(str_split(c3$Category.Groups,",",simplify=TRUE)))
categorygroup<-data.frame(str_split(c3$Category.Groups,",",simplify=TRUE),stringsAsFactors = FALSE)
#DEFINE SUCCESSFUL IS GOING TO IPO OR FOUNDING ROUNDS >=3 OR ACURIED
for (i in 1:nrow(c3)){
if(!is.na(c3$IPO.Date[i])){
c3$successful[i]=1
}else if(!is.na(c3$Number.of.Funding.Rounds[i])&&c3$Number.of.Funding.Rounds[i]>=3){
c3$successful[i]=1
}else if(c3$Status[i]=="Was Acquired"){
c3$successful[i]=1
}else{
c3$successful[i]=0
}
}
#rearrange column
c4 <- c3 %>%
select(Company.Name,Headquarters.Location,Category.Groups,Categories,Founded.Date,Closed.Date,Company.Length,
Number.of.Employees,Number.of.Founders, Number.of.Articles,Number.of.Investors,Number.of.Lead.Investors,
Number.of.Funding.Rounds,Last.Funding.Date,Last.Funding.Type,Last.Funding.Amount,Last.Equity.Funding.Amount,
Total.Equity.Funding.Amount,Total.Funding.Amount,Stock.Exchange,Stock.Symbol,IPO.Date,Valuation.at.IPO,Money.Raised.at.IPO,
Status,successful)
#exploratory Analysis
cat("funding Rounds >=3 ")
sum(c4$Number.of.Funding.Rounds>=3,na.rm=TRUE)
cat("was acquired")
sum(c4$Status=="Was Acquired")
cat("went to IPO")
sum(!is.na(c4$IPO.Date))
#
qplot(Total.Funding.Amount,data=c4,main="founding rounds distribution",drv=Number.of.Employees)
table(c3$Number.of.Funding.Rounds)
cat("successful rate")
table(c3$successful)[2]/nrow(c4)
